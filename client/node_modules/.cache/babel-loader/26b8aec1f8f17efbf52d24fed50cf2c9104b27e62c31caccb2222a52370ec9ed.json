{"ast":null,"code":"var _jsxFileName = \"D:\\\\karlo\\\\Documents\\\\GitHub\\\\PUPCB\\\\client\\\\src\\\\components\\\\confession\\\\Confession.jsx\";\nimport \"./confess.scss\";\nimport FavoriteBorderOutlinedIcon from \"@mui/icons-material/FavoriteBorderOutlined\";\nimport FavoriteOutlinedIcon from \"@mui/icons-material/FavoriteOutlined\";\nimport TextsmsOutlinedIcon from \"@mui/icons-material/TextsmsOutlined\";\nimport ShareOutlinedIcon from \"@mui/icons-material/ShareOutlined\";\nimport MoreHorizIcon from \"@mui/icons-material/MoreHoriz\";\nimport { Link } from \"react-router-dom\";\n// import Comments from \"../comments/Comments\";\nimport { useState } from \"react\";\nimport moment from \"moment\";\nimport { useQuery, useQueryClient, useMutation } from \"@tanstack/react-query\";\nimport { makeRequest } from \"../../axios\";\nimport { useContext } from \"react\";\nimport { AuthContext } from \"../../context/authContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Confession = ({\n  confession\n}) => {\n  // const { currentUser } = useContext(AuthContext);\n\n  // const { isLoading, error, data } = useQuery([\"likes\", confess.id], () =>\n  //   makeRequest.get(\"/likes?confessId=\" + confess.id).then((res) => {\n  //     return res.data;\n  //   })\n  // );\n\n  // const queryClient = useQueryClient();\n  // const deleteMutation = useMutation(\n  //   (confessId) => {\n  //     return makeRequest.delete(\"/confess/\" + confessId);\n  //   },\n  //   {\n  //     onSuccess: () => {\n  //       // Invalidate and refetch\n  //       queryClient.invalidateQueries([\"confess\"]);\n  //     },\n  //   }\n  // );\n  // const handleDelete = () => {\n  //   deleteMutation.mutate(confession.id);\n  // };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"confess\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"content\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: confession.confession\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n};\n_c = Confession;\nexport default Confession;\nvar _c;\n$RefreshReg$(_c, \"Confession\");","map":{"version":3,"names":["FavoriteBorderOutlinedIcon","FavoriteOutlinedIcon","TextsmsOutlinedIcon","ShareOutlinedIcon","MoreHorizIcon","Link","useState","moment","useQuery","useQueryClient","useMutation","makeRequest","useContext","AuthContext","jsxDEV","_jsxDEV","Confession","confession","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/karlo/Documents/GitHub/PUPCB/client/src/components/confession/Confession.jsx"],"sourcesContent":["import \"./confess.scss\";\r\nimport FavoriteBorderOutlinedIcon from \"@mui/icons-material/FavoriteBorderOutlined\";\r\nimport FavoriteOutlinedIcon from \"@mui/icons-material/FavoriteOutlined\";\r\nimport TextsmsOutlinedIcon from \"@mui/icons-material/TextsmsOutlined\";\r\nimport ShareOutlinedIcon from \"@mui/icons-material/ShareOutlined\";\r\nimport MoreHorizIcon from \"@mui/icons-material/MoreHoriz\";\r\nimport { Link } from \"react-router-dom\";\r\n// import Comments from \"../comments/Comments\";\r\nimport { useState } from \"react\";\r\nimport moment from \"moment\";\r\nimport { useQuery, useQueryClient, useMutation } from \"@tanstack/react-query\";\r\nimport { makeRequest } from \"../../axios\";\r\nimport { useContext } from \"react\";\r\nimport { AuthContext } from \"../../context/authContext\";\r\n\r\nconst Confession = ({confession }) => {\r\n\r\n  // const { currentUser } = useContext(AuthContext);\r\n\r\n  // const { isLoading, error, data } = useQuery([\"likes\", confess.id], () =>\r\n  //   makeRequest.get(\"/likes?confessId=\" + confess.id).then((res) => {\r\n  //     return res.data;\r\n  //   })\r\n  // );\r\n\r\n  // const queryClient = useQueryClient();\r\n  // const deleteMutation = useMutation(\r\n  //   (confessId) => {\r\n  //     return makeRequest.delete(\"/confess/\" + confessId);\r\n  //   },\r\n  //   {\r\n  //     onSuccess: () => {\r\n  //       // Invalidate and refetch\r\n  //       queryClient.invalidateQueries([\"confess\"]);\r\n  //     },\r\n  //   }\r\n  // );\r\n  // const handleDelete = () => {\r\n  //   deleteMutation.mutate(confession.id);\r\n  // };\r\n\r\n  return (\r\n    <div className=\"confess\">\r\n      <div className=\"container\">\r\n        <div className=\"content\">\r\n          <p>{confession.confession}</p>\r\n        </div>\r\n        \r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Confession;"],"mappings":";AAAA,OAAO,gBAAgB;AACvB,OAAOA,0BAA0B,MAAM,4CAA4C;AACnF,OAAOC,oBAAoB,MAAM,sCAAsC;AACvE,OAAOC,mBAAmB,MAAM,qCAAqC;AACrE,OAAOC,iBAAiB,MAAM,mCAAmC;AACjE,OAAOC,aAAa,MAAM,+BAA+B;AACzD,SAASC,IAAI,QAAQ,kBAAkB;AACvC;AACA,SAASC,QAAQ,QAAQ,OAAO;AAChC,OAAOC,MAAM,MAAM,QAAQ;AAC3B,SAASC,QAAQ,EAAEC,cAAc,EAAEC,WAAW,QAAQ,uBAAuB;AAC7E,SAASC,WAAW,QAAQ,aAAa;AACzC,SAASC,UAAU,QAAQ,OAAO;AAClC,SAASC,WAAW,QAAQ,2BAA2B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExD,MAAMC,UAAU,GAAGA,CAAC;EAACC;AAAW,CAAC,KAAK;EAEpC;;EAEA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA,oBACEF,OAAA;IAAKG,SAAS,EAAC,SAAS;IAAAC,QAAA,eACtBJ,OAAA;MAAKG,SAAS,EAAC,WAAW;MAAAC,QAAA,eACxBJ,OAAA;QAAKG,SAAS,EAAC,SAAS;QAAAC,QAAA,eACtBJ,OAAA;UAAAI,QAAA,EAAIF,UAAU,CAACA;QAAU;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC3B;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAEH;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACC,EAAA,GApCIR,UAAU;AAsChB,eAAeA,UAAU;AAAC,IAAAQ,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}