{"ast":null,"code":"var _jsxFileName = \"D:\\\\karlo\\\\Documents\\\\GitHub\\\\PUPCB\\\\client\\\\src\\\\components\\\\confessions\\\\confessions.jsx\",\n  _s = $RefreshSig$();\nimport Confess from \"../confess/Confess\";\nimport \"./confessions.scss\";\nimport { useQuery } from \"@tanstack/react-query\";\nimport { makeRequest } from \"../../axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Confessions = ({\n  userId\n}) => {\n  _s();\n  const {\n    isLoading,\n    error,\n    data\n  } = useQuery([\"confessions\"], () => makeRequest.get(\"/confessions?userId=\" + userId).then(res => {\n    return res.data;\n  }));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"confessions\",\n    children: error ? \"Something went wrong!\" : isLoading ? \"loading\" : data.map(confession => /*#__PURE__*/_jsxDEV(Confession, {\n      confession: confession\n    }, confess.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 36\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 5\n  }, this);\n};\n_s(Confessions, \"P7jBIA24rc00P7RvfXjpVl6dqRI=\", false, function () {\n  return [useQuery];\n});\n_c = Confessions;\nexport default Confessions;\nvar _c;\n$RefreshReg$(_c, \"Confessions\");","map":{"version":3,"names":["Confess","useQuery","makeRequest","jsxDEV","_jsxDEV","Confessions","userId","_s","isLoading","error","data","get","then","res","className","children","map","confession","Confession","confess","id","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/karlo/Documents/GitHub/PUPCB/client/src/components/confessions/confessions.jsx"],"sourcesContent":["import Confess from \"../confess/Confess\";\r\nimport \"./confessions.scss\";\r\nimport { useQuery } from \"@tanstack/react-query\";\r\nimport { makeRequest } from \"../../axios\";\r\n\r\nconst Confessions = ({userId}) => {\r\n  const { isLoading, error, data } = useQuery([\"confessions\"], () =>\r\n    makeRequest.get(\"/confessions?userId=\"+userId).then((res) => {\r\n      return res.data;\r\n    })\r\n  );\r\n\r\n  return (\r\n    <div className=\"confessions\">\r\n      {error\r\n        ? \"Something went wrong!\"\r\n        : isLoading\r\n        ? \"loading\"\r\n        : data.map((confession) => <Confession confession={confession} key={confess.id} />)}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Confessions;"],"mappings":";;AAAA,OAAOA,OAAO,MAAM,oBAAoB;AACxC,OAAO,oBAAoB;AAC3B,SAASC,QAAQ,QAAQ,uBAAuB;AAChD,SAASC,WAAW,QAAQ,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1C,MAAMC,WAAW,GAAGA,CAAC;EAACC;AAAM,CAAC,KAAK;EAAAC,EAAA;EAChC,MAAM;IAAEC,SAAS;IAAEC,KAAK;IAAEC;EAAK,CAAC,GAAGT,QAAQ,CAAC,CAAC,aAAa,CAAC,EAAE,MAC3DC,WAAW,CAACS,GAAG,CAAC,sBAAsB,GAACL,MAAM,CAAC,CAACM,IAAI,CAAEC,GAAG,IAAK;IAC3D,OAAOA,GAAG,CAACH,IAAI;EACjB,CAAC,CACH,CAAC;EAED,oBACEN,OAAA;IAAKU,SAAS,EAAC,aAAa;IAAAC,QAAA,EACzBN,KAAK,GACF,uBAAuB,GACvBD,SAAS,GACT,SAAS,GACTE,IAAI,CAACM,GAAG,CAAEC,UAAU,iBAAKb,OAAA,CAACc,UAAU;MAACD,UAAU,EAAEA;IAAW,GAAME,OAAO,CAACC,EAAE;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAClF,CAAC;AAEV,CAAC;AAACjB,EAAA,CAhBIF,WAAW;EAAA,QACoBJ,QAAQ;AAAA;AAAAwB,EAAA,GADvCpB,WAAW;AAkBjB,eAAeA,WAAW;AAAC,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}